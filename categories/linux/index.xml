<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux on YAB (Yet Another Blog)</title>
    <link>http://shalbhav.github.io/categories/linux/</link>
    <description>Recent content in Linux on YAB (Yet Another Blog)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://shalbhav.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A container does not need an OS</title>
      <link>http://shalbhav.github.io/posts/container-no-os/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://shalbhav.github.io/posts/container-no-os/</guid>
      <description>Apparently a container does not even need an OS whereas VMs do. Container != VM, but I never stopped to think about this before. Processes within the container can directly talk to the kernel on which the container is running. Most containers are built with a base OS image. Turns out you can create an image without a base OS by pulling the scratch image, that contains nothing.
Let&amp;rsquo;s create a small c program that is statically compiled.</description>
    </item>
    
    <item>
      <title>Analyzing Kubernetes container based scaling</title>
      <link>http://shalbhav.github.io/posts/k8s-hpa-algebra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://shalbhav.github.io/posts/k8s-hpa-algebra/</guid>
      <description>Kubernetes Horizontal Pod Autoscaling provides a way to scale up number of Pod replicas in a deployment based on per-pod metric thresholds set by the operator. Most often the per-pod resource metrics (like CPU and memory) are used to scale the pods. The utilization value is computed over all the containers in each Pod.
Starting with v1.20, Kubernetes started offering HPA scaling based on container resource metrics as an alpha feature (as of the time of this writing).</description>
    </item>
    
  </channel>
</rss>
